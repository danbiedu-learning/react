/* basic start with "cleaning" */
* {
  margin: 0;
  padding: 0;
  /* no margin, padding box setting */
  box-sizing: border-box;
}

body {
  /* will be inheritde under 'body'  */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* 1.7 times bigger than pre-defined */
  color: #777;
  padding: 30px; /* won't be inherited*/
}
/*  */

.header {
  /* viewport height */
  height: 95vh;

  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover; /* trying to fit */
  background-position: top;

  /* x y, x y, x y, x y, ...  (clock wise) */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  /* this(position : realtive) is the origin of logo-box start */
  position: relative;
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}
.logo {
  height: 35px;
}

.text-box {
  position: absolute;

  /* these two below is related with parent */
  top: 40%;
  left: 50%;

  /* transform -50% is not belong to parent, element itself */
  transform: translate(-50%, -50%);
  /* below one can be, since just text. and displayed inline-block */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* to remove the shaking things when animation plays */
  backface-visibility: hidden;

  margin-bottom: 60px;
}
.heading-primary-main {
  /* block will line breaked */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;

  /* delay before start animation */
  /* animation-delay: 3s; */

  /* how many time animation plays */
  /* animation-iteration-count: 3; */

  /* See MDN about timing function */
  /* animation-timing-function: linear; */
}
.heading-primary-sub {
  /* block will line breaked */
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* short hand expression */
  animation: moveInRight 1s;
}

/* 
two types of animations in CSS

1. transition property, change it with on event 
2. keyframes
*/
@keyframes moveInLeft {
  /* start */
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  /* middle */
  80% {
    transform: translateX(20px);
  }

  /* end, final */
  100% {
    opacity: 1;
    transform: translate(0); /* 0 : original position */
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-20px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  80% {
    transform: translateY(-4px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* pseudo 'link' */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;

  /* appear like just normal inline-block */
  display: inline-block;

  /* if number is big, it will be setted as the limit */
  border-radius: 100px;

  /* enable all the properties be animated  */
  /* this should be here, 'initial state' */
  transition: all 0.2s;

  position: relative;
}

.btn:hover {
  transform: translateY(-3px);

  /* box-shadow x y blur color */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
/* clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: white;
  color: #777;
}

/* after => treated like child of .btn */
.btn::after {
  /* content property in ::after is "necessary thing" */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  /* initial state*/
  transition: all 0.4s;
}

.btn-white::after {
  background-color: white;
}

/* means:: when hover on btn then after should... */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  /* name, duration function delay */
  animation: moveInBottom 0.5s ease-out 0.75s;

  /* set state to 0% style before animation start */
  animation-fill-mode: backwards;
}